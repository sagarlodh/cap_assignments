Assignment

NOTE: Do not forget to see manual page using "--help" option in command when searching for options/commands for a particular task.

1. Install Docker, either on your native OS or on a VM. Make sure it runs. Type "docker -v" to check if it's installed.

If you can't install or configure Docker, you can use the online docker setup to do the assignment.
Step1 Goto:- https://www.katacoda.com/courses/kubernetes/playground
Step2 Click on "continue" button on the left panel
Step3 Click on "launch.sh" button on the left panel
Step4 From the right panel use the top console to execute below command:-
		docker -v


Try below commands for help
	docker --help  ---> This command shows all available options and commands to work with images and containers
	docker image --help ---> This command shows all the avaialble options and commands to work with docker images
	docker container --help ---> This command shows all the avaialble options and commands to work with docker containers

NOTE:- DO NOT TRY TO USE INTERNET TO SOLVE ASSIGNMENT, BETTER USE THE ABOVE --help OPTION TO SEE THE MANUAL OF ANY PARTICULAR COMMAND AND FIGURE OUT THE SOLUTIONS ON YOUR OWN.

2. Find a image from dockerhub of your choice(recommeded: nginx), don't use browser, pull the official image from dockerhub
==> docker pull nginx
3. List all the available images in your machine/vm, make sure you see recently pulled image in the list.
==> docker images --all
4. Find out the "Full" ImageId of the image that you pulled and write it below.
==> b8cf2cbeabb9
5. Create a container of your image
==> docker run --name MyNginx -it nginx
6. List all the running containers
==> docker ps
7. List all the running and stopped containers
==> docker container ls
8. Find out the "Full" containerId of the container and write it below.
==> 4031000f1694
9. Find out how many image layers are used to build this image.
==> 6
10. Get the Apache Tomcat 7 server image from the docker hub.
==> docker pull tomcat
11. Run the Apache Tomcat 7, I mean create a container of Apache Tomcat.
==> docker run --name MyTomcat1 -it tomcat
==> docker start
12. Find out what is the IP Address of the Apache Tomcat Container that it is running on
==> 172.18.0.3
13. Which Port it is using?
==> 8080 
14. Try to access the Tomcat's home page from your machine/vm.
==> needed to expose port
15. What is the disk size of Apache Tomcat image?
==> 37.9kB
16. Find out list of all environment variables that is configured for tomcat image, can you see JAVA_HOME and CATALINA_HOME? What did you notice about it?
==> docker exec MyTomcat1 env
17. Find out which port is exposed for tomcat?
==> 8080:80
18. Run multiple conntainers of tomcat on different port and access it's home page.
==> done
19. Pull ubuntu os from dockerhub, try to pull 2 images of ubuntu, Except the latest one.
==> docker pull ubuntu:18.04
==> docker pull ubuntu:14.04
20. Run the container of ubuntu in attached mode.
==> docker run --name MyUBUNTU1 -p 9090:8080 ubuntu:18.04
21. Run the container of another ubuntu in detached mode.
==> docker run --name MyUBUNTU2 -p 9091:8080 ubuntu:14.04 -d
22. Check how many ubuntu containers are running and stopped
==> 2
23. Is the tomcat container running? If no, start one.
==> started and stopped ==> docker stop MyTomcat1
24. Check the logs, generated by tomcat container(don't forget to make request to tomcat's home page to see the log).
==> docker logs MyTomcat1
25. Check if ubuntu conatiner is running? If no, start one in attached mode to the terminal.
==> yes
26. Login as root user in ubuntu container
==> done
27. Create a file with any name in root directory
==> done
28. Install software of your choice in ubuntu container using "apt-get install"
==> #for installing docker engine
FROM ubuntu
RUN apt-get install docker-ce docker-ce-cli containerd.io
then _> docker build -t myimage1
#can be done directly too
29. Now exit the ubuntu shell, are you back to your host machine, if not, come back to the host machine.
==> done
30. Check if the ubuntu container is running.
==> had to run
31. Create a new ubuntu container out of the same image as that previous container in attached mode.
==>docker run --name MyUBUNTU3 -p 9092:8080 ubuntu:18.04
32. Login as a root user
==>done
33. Check if you can see the file created in previous container, you will not see the file as well as software that you installed in the previous container. Now kill this Container.
==> done, docker kill MyUBUNTU3
34. Do you have the previous ubuntu container where you created the file and installed the software? If no reapeat step 25 to 29.
==> yes
35. Create an Image out of the existing container.
==> docker commit MyUBUNTU1
36. Now Create a Container out of this image and login into it to see if you can see the file and software installed by you in the previous container.
==> docker run --name NewUBUNTU -p 9094:8080 MyUBUNTU1	
37. Do you have running tomcat container? If yes, Stop it and kill all tomcat container.
==> previously stopped
==> docker kill MyTomcat1
38. Create an index.html file with following code in it:-
	<h1>This is Tomcat Container</h1>
Now, Start a tomcat container in such a way that on hitting its URL for home page it should show the above html page.
==> 
[1]Using vim editior create an mess.html file in the same directory as of Docker home.
[2]write code <h1>This is Tomcat Container</h1>
[3]after saving exit by ESC then :wq
[4]docker cp mess.html container:<path of file>
[5]run/refresh and get port
39. type below command:-
	docker images --help
Now, try to run command that proves the concept of following three options:-
1. -a
2. -f
3. -q
write atleast 1 command using each option above and prove their concepts as described in the --help.
==> done
40. type below command:-
	docker ps --help
Now, try to run command that proves the concept of following six options:-
1. -a
2. -f
3. -q
4. -n
5. -l
6. -s
==> done
